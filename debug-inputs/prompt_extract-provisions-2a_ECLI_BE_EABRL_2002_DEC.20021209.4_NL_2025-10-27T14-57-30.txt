════════════════════════════════════════════════════════════════════════════════
DEBUG PROMPT GENERATION
════════════════════════════════════════════════════════════════════════════════

Job Type:     extract-provisions-2a
Decision ID:  ECLI:BE:EABRL:2002:DEC.20021209.4
Language:     NL
Generated:    2025-10-27T14:57:30.524Z
Prompt Size:  5188 characters

════════════════════════════════════════════════════════════════════════════════
PROMPT CONTENT
════════════════════════════════════════════════════════════════════════════════

You are a legal document analyzer for Belgian and European law. Extract ALL unique legal provisions from the provided text and output both a human-readable summary and a structured JSON payload.

DECISION ID (ECLI): ECLI:BE:EABRL:2002:DEC.20021209.4
LANGUAGE: NL

INPUT TEXT:
[1] ste instantie meent verweerder dat de rechter in kort geding, op grond van art. 2 Ger. W., in combinatie met het beginsel van het niet-contradictoir karakter van he

[2] opsporingsmaatregel met betrekking tot zijn goederen, krachtens het nieuwe art. 28sexies W. Sv. (zoals ingevoegd door de zg. Wet Franchimont van 12 maart 1998) aan de pro

[3] rocedure ook heeft toegepast, nu zij op 28 oktober 2002 bij toepassing van art. 28sexies W. Sv. een verzoek tot opheffing heeft gericht aan de procureur des Konings, die

[4] an stallinggskosten). 2.2. Van haar kant meent eiseres dat het bestaan van art. 28sexies W. Sv. de bevoegdheid van de rechter in kort geding geenszins wegneemt, nu deze u

[5] eken de procureur des Konings en de K.I. (in beroep) zich in het kader van art. 28sexies W. Sv. enkel uit over het al dan niet opheffen van de opsporingshandeling. Eisere

EXTRACTION INSTRUCTIONS:

1. ARTICLE IDENTIFICATION:
   - Extract every mention of "artikel", "article", "art." in both French and Dutch
   - Include complete article numbers (e.g., "101", "174", "327")
   - Capture ALL subdivisions: §, al., alinea, lid, °, bis, ter, etc.
   - Note references like "e.v." (en volgende / et suivants) meaning "and following"
   - Include historical references (e.g., "thans artikel X" = "now article X")

2. PARENT ACT IDENTIFICATION:
   - Act type: Use enum values → WET/LOI = LAW, KONINKLIJK_BESLUIT/ARRÊTÉ_ROYAL = REGULATION, DECREET/DÉCRET = DECREE, GRONDWET/CONSTITUTION = CONSTITUTION, etc.
   - Full act name in original language
   - Date in YYYY-MM-DD format (if mentioned in act title)
   - Act number if present (e.g., "2001022645")

3. PROVISION NUMBERING:
   - provisionNumber: Full text as cited (e.g., "artikel 174, §1, lid 5°")
   - provisionNumberKey: Extract primary numeric identifier only (e.g., "174")

4. INTERNAL ID GENERATION:
   - internalProvisionId: Format as "ART-{decisionId}-###" where ### is a 3-digit sequential number (001, 002, 003...)
   - internalParentActId: Format as "ACT-{decisionId}-###" where ### is a 3-digit sequential number (001, 002, 003...)
   - Each unique parent act gets one ACT ID, provisions under same act share that ACT ID
   - Provisions are numbered sequentially regardless of parent act

5. DEDUPLICATION:
   - Same article + same parent act = ONE entry (list all subdivision contexts)
   - Same article + different parent act = SEPARATE entries
   - Same article + different dates = SEPARATE entries

6. NULL VALUES:
   - provisionId: ALWAYS null (will be matched to database later)
   - parentActId: ALWAYS null (will be matched to database later)
   - parentActNumber: null if not mentioned in source text

OUTPUT FORMAT:

Return a JSON object matching this exact structure:

{
  "decisionId": "{decisionId}",
  "language": "{language}",
  "extractionMetadata": {
    "totalProvisionsExtracted": 0,
    "totalUniqueParentActs": 0,
    "extractionTimestamp": "2025-10-26T00:00:00Z"
  },
  "citedProvisions": [
    {
      "provisionId": null,
      "parentActId": null,
      "internalProvisionId": "ART-{decisionId}-001",
      "internalParentActId": "ACT-{decisionId}-001",
      "provisionNumber": "artikel 101",
      "provisionNumberKey": "101",
      "parentActType": "LAW",
      "parentActName": "gecoördineerde wetten van 14 juli 1994 betreffende...",
      "parentActDate": "1994-07-14",
      "parentActNumber": null
    }
  ]
}

PARENT ACT TYPE MAPPING:
- WET, LOI → "LAW"
- KONINKLIJK BESLUIT, ARRÊTÉ ROYAL, KB, AR → "REGULATION"
- DECREET, DÉCRET → "DECREE"
- ORDONNANTIE, ORDONNANCE → "ORDINANCE"
- GRONDWET, CONSTITUTION → "CONSTITUTION"
- VERDRAG, TRAITÉ → "TREATY"
- BURGERLIJK WETBOEK, CODE CIVIL, WETBOEK, CODE → "CODE"
- RICHTLIJN, DIRECTIVE → "DIRECTIVE"
- VERORDENING (EU), RÈGLEMENT (UE) → "EU_REGULATION"
- OTHER → "OTHER"

CRITICAL RULES:
1. provisionId and parentActId must ALWAYS be null
2. internalProvisionId must use format: ART-{full ECLI}-### (3 digits)
3. internalParentActId must use format: ACT-{full ECLI}-### (3 digits)
4. provisionNumberKey must be numeric string only (no "artikel", no subdivisions)
5. parentActDate must be YYYY-MM-DD format or null
6. All provisions citing same parent act must share same internalParentActId
7. Number internalParentActId sequentially as new acts are encountered (001, 002, 003...)
8. Number internalProvisionId sequentially for all provisions (001, 002, 003...)

Think step-by-step:
1. Scan all snippets for article mentions
2. For each, identify parent act from surrounding context
3. Assign internalParentActId (new acts get new numbers, same acts reuse)
4. Assign internalProvisionId sequentially for all provisions
5. Extract provisionNumberKey (numeric part only)
6. Map parent act type to enum
7. Format dates as YYYY-MM-DD
8. Return only the JSON object

IMPORTANT: Return ONLY the JSON object. No explanations, no human-readable summary, no markdown formatting.

════════════════════════════════════════════════════════════════════════════════
END OF PROMPT
════════════════════════════════════════════════════════════════════════════════